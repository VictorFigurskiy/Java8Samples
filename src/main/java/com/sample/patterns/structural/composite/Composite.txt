Шаблон Компоновщик (Composite)
==========================================================
Цель:

Скомпонировать объекты в структуру по типу "Дерева", позволяя клиентам трактовать
отдельные и составные объекты.

==========================================================

Используется для группировки мелких компонентов в более крупные, которые, в свою очередь, могут стать основой для
еще более крупных структур.

==========================================================
Пример использования:

- для представления иерархии часть-целое;
- мы хотим, чтобы клиенты одним способом трактовали как отдельные, так и составные объекты.

==========================================================

Компоновщик (англ. Composite pattern) — структурный шаблон проектирования, объединяющий объекты в древовидную
структуру для представления иерархии от частного к целому. Компоновщик позволяет клиентам обращаться к отдельным объектам и к группам объектов одинаково.
Логика шаблона в том, чтобы была возможность положить в список не только отдельный объект, но и группу

Ну вот как раз если брать книгу по GOF паттернам, прекрасно описано что композит - это паттерн в виде дерева в котором объекты представлены как часть - целое.
То есть имея общий интерфейс мы не зная логики можем оперировать как с листом у которого по факту нету возможности добавить чилды, так и с композитом которые
могут содержать дочерние объекты. Для примера можно представить команду которая сама по себе что-то делает это будет лист, а так же команду которая сама по
себе состоит из макрокоманд без которых она не считается выполненной пока не выполнятся макрокоманды. Для клиента не нужно знать с чем он работает если он
хочет обходить весь граф. поправьте меня, но именно так я и понял. Хотя наверно все таки я не прав и как обычно вариантов реализаций может быть много например
вот такая https://github.com/iluwatar/java-design-patterns/tree/master/composite